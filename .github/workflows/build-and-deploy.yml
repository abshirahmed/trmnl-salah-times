# Build and Deploy Workflow
#
# This workflow handles the continuous integration and deployment process for the TRMNL Salah Times project.
# It follows a trunk-based development approach where:
# - All branch pushes are tested to provide early feedback
# - All PRs to main are validated before merging
# - Only changes to the main branch are deployed to production

name: Build and Deploy

# Workflow Triggers
on:
  push:
    branches:
      - '**'  # Run on all branch pushes (including main)
  pull_request:
    branches:
      - main   # Run on PRs targeting the main branch

jobs:
  # Job: Test & Validate
  # Purpose: Ensure code quality by running tests, type checking, and linting
  # Runs on: All branch pushes and PRs to main
  test-and-validate:
    name: Test & Validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Check types
        run: yarn check-types

      - name: Lint code
        run: yarn lint

      - name: Run tests
        run: yarn test

  # Job: Deploy to Production
  # Purpose: Deploy the application to AWS using Serverless Framework with stage=prod
  # Runs on: Only pushes to the main branch
  deploy:
    name: Deploy to Production
    needs: test-and-validate  # Only run if tests pass
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # Required for OIDC
      contents: read   # Required for checkout
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'  # Only deploy on main branch pushes
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/TrmnlSalahTimesDeployRole
          aws-region: eu-west-2  # AWS region for deployment
          
      - name: Deploy to AWS (Production)
        run: yarn serverless:deploy --stage prod
